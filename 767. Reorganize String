class Solution {
public:
    string reorganizeString(string S) {
        
        string s;
        priority_queue <pair<int,char>> pq;
        int count[26];
        memset(count, 0, sizeof(count));
        for(char c: S){
            count[c-'a']++;
        }
        for(int i = 0; i < 26; i++){
            if(count[i] > 0){
                pq.push({count[i], (char)('a' + i)});
            }
        }
        while(pq.size() > 1){
            pair<int,char> a = pq.top();
            pq.pop();
            pair<int,char> b = pq.top();
            pq.pop();
            
            s += a.second;
            s += b.second;
            
            a.first--;
            b.first--;
            
            if(a.first > 0) pq.push(a);
            if(b.first > 0) pq.push(b);
        }
        if(pq.empty()){
            return s;
        }
        if(pq.top().first >1) return "";
        else{
            s.push_back(pq.top().second);
        }
        return s;
    }
};
