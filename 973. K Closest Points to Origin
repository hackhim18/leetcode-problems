class Solution {
public:
  
    vector<vector<int>> kClosest(vector<vector<int>>& points, int K) 
    {
        ios_base::sync_with_stdio(false);
         cin.tie(NULL);
        
        
        priority_queue<pair<int,vector<int>>>pq;
        for(int i=0;i<points.size();i++)
        {
            int distance=points[i][0]*points[i][0]+points[i][1]*points[i][1];
            pq.push({distance,{points[i][0],points[i][1]}});
            if(pq.size()>K)
                pq.pop();
        }
        vector<vector<int>>res;
        while(!pq.empty())
        {
            res.push_back(pq.top().second);
            pq.pop();
        }
        return res;
    }
};
