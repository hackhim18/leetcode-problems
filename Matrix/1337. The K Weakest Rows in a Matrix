class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        vector <int> weakRow;
        int row = mat.size();
        int column = mat[0].size();
           multimap <int, int> soldierPerRow;
           for(int i=0; i<row; i++)
        {
            int numSoldier = 0, numCivilian = 0;
            for(int j=0; j<column; j++)
            {      if(mat[i][j] == 0)
                    numCivilian++;
                else
                    numSoldier++;
            } 
            soldierPerRow.insert(pair<int, int> (numSoldier, i));
        }
        
        multimap<int, int> :: iterator itr = soldierPerRow.begin();
   
        while(itr != soldierPerRow.end() && k != 0)
        {
            weakRow.push_back(itr->second); 
            itr++;
            k--;
        }
        return weakRow;
    }
};
