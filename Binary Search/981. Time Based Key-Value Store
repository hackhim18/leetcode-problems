class TimeMap {
private:
    map <int, map<string, string>> store;
    map <string, vector<int>> keyOccurences;
public: 
    TimeMap() { 
    
    void set(string key, string value, int timestamp) {
        store[timestamp][key] = value;
        keyOccurences[key].push_back(timestamp);
    }
    
    string get(string key, int timestamp) {
        int l = 0, r = keyOccurences[key].size() - 1;
        
        while(l <= r) {
           int m = l - (r - l)/2;
            
           if(keyOccurences[key][m] <= timestamp) {
               l = m + 1;
           }
           else {
               r = m - 1; 
           }
        }
        
        if(l - 1 < 0 or l - 1 > keyOccurences[key].size() - 1) {
            return "";
        }
        
        int ts = keyOccurences[key][l - 1];
        return store[ts][key];
    }
};
