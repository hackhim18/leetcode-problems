/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    long long totalSum =0;
    long long result;
    
    //total tree sum
    long long findTotalSum(TreeNode* root){
        if(root == NULL)
            return 0;
        long long totalSubTreeValue = root->val;
        totalSubTreeValue +=findTotalSum(root->left);
        totalSubTreeValue +=findTotalSum(root->right);
        return totalSubTreeValue;
        
    }
    
    long long findMaxSum(TreeNode* root){
        if(root == NULL)
            return 0;
        
        long long leftSubTreeSum = findMaxSum(root->left);
        long long rightSubTreeSum = findMaxSum(root->right);
        
        result = max({result , (leftSubTreeSum)*(totalSum-leftSubTreeSum),
                     (rightSubTreeSum)*(totalSum-rightSubTreeSum)});
            return root->val + rightSubTreeSum + leftSubTreeSum;

    }
    
    
    
    int maxProduct(TreeNode* root) {
     totalSum = findTotalSum(root);
     findMaxSum(root);
     return result%1000000007;
    }
};
