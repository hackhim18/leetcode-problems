class Solution {
public:
    ListNode* mergesort(ListNode* a,ListNode* b)
    {
        ListNode *dummy = new ListNode(-1);
        ListNode *temp=dummy;
        while(a&&b)
        {
           if(a->val>b->val)
           {
               temp->next=b;
               b=b->next;
           }
            else
            {
                temp->next=a;
                a=a->next;
            }
            temp=temp->next;
        }
        if(a) {temp->next=a;}
        if(b) {temp->next=b;}
        temp=dummy->next;
        delete dummy;
        return temp;
    }
    ListNode* sortList(ListNode* head) {
        if(!head||!(head->next)) return head;
        ListNode *slow=head,*fast=head->next;
        while(fast&&fast->next)
        { 
            slow=slow->next;
            fast=fast->next->next;
        }
        
        fast=slow->next;
        slow->next=NULL;
        return mergesort(sortList(fast),sortList(head));    
    }
};
